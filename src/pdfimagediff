#!/bin/bash

### # # ###
### # Functions # ###
### # # ###

# Function to get the page count of a PDF file
get_page_count() {
    local pdf_file="$1"
    local page_count=$(pdfinfo "$pdf_file" | grep -oP "Pages:\s+\K\d+")
    echo "$page_count"
}

# Function to split a PDF into PNG images
split_pdf_to_png() {
    local pdf_file="$1"
    local output_dir="$2"
    
    mkdir -p "$output_dir"

    pdftoppm -r 400 -png "$pdf_file" "$output_dir/page"
}

# Function to perform image comparison with tolerance
compare_images_with_tolerance() {
    local dir1="$1"
    local dir2="$2"
    local output_dir="$3"
    local tolerance="$4"

    mkdir -p "$output_dir"

    for file1 in "$dir1"/*.png; do
        file2="$dir2/$(basename "$file1")"
        output_file="$output_dir/$(basename "$file1")"

        compare -metric AE -fuzz "${tolerance}%" "$file1" "$file2" "$output_file"
    done
}

# Combine images into PDFs
combine_images_to_pdf() {
    local input_dir="$1"
    local output_dir="$2"
    
    mkdir -p "$output_dir"
    
    for dir in "$input_dir"/*; do
        # Check if the entry is a directory
        if [ -d "$dir" ]; then
            pdf_file="$output_dir/$(basename "$dir").pdf"
            
            # Convert all PNG images in the directory to a single PDF
            img2pdf --output "$pdf_file" "$dir"/*.png
        fi
    done
}

# Open all PDFs in the "diff-pdf" directory
open_pdfs() {
    local pdf_dir="$1"
    
    for pdf_file in "$pdf_dir"/*.pdf; do
        # Check if the entry is a file
        if [ -f "$pdf_file" ]; then
            # Define the window size (replace with your desired dimensions)
            xdg-open "$pdf_file"
        fi
    done
}

### # # ###
### # User Parameters # ###
### # # ###

# Dialogs to select the PDFs

pdf1_file=$(zenity --file-selection --title="pdfimagediff : Select the first PDF")
if [ $? -eq 1 ]; then
    exit 1
fi

pdf2_file=$(zenity --file-selection --title="pdfimagediff : Select the second PDF")
if [ $? -eq 1 ]; then
    exit 1
fi

# Dialog to select tolerance
tolerance=$(zenity --scale --title="pdfimagediff : Select Tolerance" --text="Choose the tolerance level:" --min-value=0 --max-value=100 --value=80)
if [ $? -eq 1 ]; then
    exit 1
fi

### # # ###
### # Processing # ###
### # # ###

for pdf_file in "$pdf1_file" "$pdf2_file"; do
    if [ -z "$pdf_file" ]; then
        exit 0
    fi
done

# Create a temporary folder
timestamp=$(date +%Y%m%d%H%M%S)
temp_dir="/tmp/PDFImageDiff_$timestamp"
src_png_dir="$temp_dir/src-png"
diff_png_dir="$temp_dir/diff-png"

(
    mkdir -p "$src_png_dir" "$diff_png_dir"

    # Split the PDFs into PNG images
    split_pdf_to_png "$pdf1_file" "$src_png_dir/1"
    split_pdf_to_png "$pdf2_file" "$src_png_dir/2"

    compare_images_with_tolerance "$src_png_dir/1" "$src_png_dir/2" "$diff_png_dir/$tolerance" $tolerance

    # Combine the images into PDFs in the "diff-pdf" directory
    combine_images_to_pdf "$diff_png_dir" "$temp_dir/diff-pdf"

) | zenity --progress \
    --title="Processing" \
    --text="Processing..." \
    --pulsate \
    --no-cancel \
    --auto-close

action=$(zenity --width=800 --height=600 --list --title="pdfimagediff : Select an Action" --text="Image comparison completed. \nResults are saved in $temp_dir.\n\nSelect an action" \
    --radiolist --column="Select" --column="Action" \
    TRUE "Open PDF and Folder" \
    FALSE "Open PDF" \
    FALSE "Open Folder" \
    FALSE "Do Nothing")

case $action in
    "Open PDF and Folder")
        open_pdfs "$temp_dir/diff-pdf"
        sleep 3
        xdg-open "$temp_dir"
        ;;
    "Open PDF")
        open_pdfs "$temp_dir/diff-pdf"
        ;;
    "Open Folder")
        xdg-open "$temp_dir"
        ;;
    "Do Nothing")
        echo "No action selected."
        ;;
    *)
        zenity --error --text="No valid option selected. Exiting."
        ;;
esac

exit 0
